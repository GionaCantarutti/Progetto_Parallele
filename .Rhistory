q()
getwd()
ls()
x <- 1:3
rep(x, each=3)
sd(x)
mean(x)
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218,327,106,67), nrow=3,byrow=T) colnames(caff.marital) <- c("0","1-150","151-300",">300") rownames(caff.marital) <- c("Married","Prev.married","Single") names(dimnames(caff.marital)) <- c("Marital status","Caffeine consumption in mg/day")
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218,327,106,67), nrow=3,byrow=T); colnames(caff.marital) <- c("0","1-150","151-300",">300"); rownames(caff.marital) <- c("Married","Prev.married","Single"); names(dimnames(caff.marital)) <- c("Marital status","Caffeine consumption in mg/day");
caff.marital
help cbind
help
help(cbind)
rep("0",652)
total.caff <- margin.table(caff.marital, 2)
total.caff
barplot(total.caff)
help(margin.table)
help(lm)
help(~)
~
as
1 ~ 4
l <- letters[1:20]
sample(l, 10)
sample(l, 30)
sample(l, 30, replace=TRUE)
sample(l, 30, replace=TRUE)
l <- letters[1:9]
v <- sample(l, 1000, replace = TRUE)
table(v)/sum(table(v))
table(v)
sum(table(v))
table(v)/9
plot(table(v)/sum(table(v)))
abline(h=1/9,col=2)
abline(h=1/9,col=5)
TF <- c("yey", "ney")
P <- c(0.2, 0.8)
sample(TF, 1000, prob = P, replace=T)
TFS <- sample(TF, 1000, prob = P, replace=T)
table(TFS)
rbinom(10, 5, P)
rbinom(10, 500, P)
table(rbinom(10, 500, P))
mean(rbinom(10, 500, P))
mean(rbinom(100, 500, P))
mean(rbinom(1000, 500, P))
mean(rbinom(1000, 500, 0.2))
mean(rbinom(1000, 500, 0.2))
mean(rbinom(10000, 1000, 0.2))
mean(rbinom(10000, 1000, 0.4))
mean(rbinom(10000, 1000, 0.5))
help("plot")
help(plot)
plot
help(rbinom)
rbinom(1000, 40, 0.37)
mean(rbinom(1000, 40, 0.37))
mean(rbinom(100000, 40, 0.37))
stdev(rbinom(100000, 40, 0.37))
sd(rbinom(100000, 40, 0.37))
mean(rbinom(100000, 40, 0.12))
rbinom(1000, 20, 0.14)
maxcharges <- 10
distr <- rbinom(10000, 20, 0.14)
distr + (distr * 0.15 * maxcharges)
help(min)
pmin(macharges, distr + (distr * 0.15 * maxcharges))
pmin(maxcharges, distr + (distr * 0.15 * maxcharges))
res <- pmin(maxcharges, distr + (distr * 0.15 * maxcharges))
func roll.charges(observations, kills, chargechance, tomaxchance, maxcharges) <- {
roll.charges(observations, kills, chargechance, tomaxchance, maxcharges) <- {
d <- rbinom(observations, kills, chargechance)
pmin(maxcharges, d + (d * tomaxchance * maxcharges))
}
roll.charges <- function(observations, kills, chargechance, tomaxchance, maxcharges) {
d <- rbinom(observations, kills, chargechance)
pmin(maxcharges, d + (d * tomaxchance * maxcharges))
}
roll.charges(10000, 20, 0.15, 0.15, 10)
res <- roll.charges(10000, 20, 0.15, 0.15, 10)
mean(res)
sd(res)
hist(rs)
hist(res)
help(hist)
hist(res, breaks=10)
hist(res, breaks=5)
hist(res, breaks=2)
hist(res, breaks=6)
hist(res, breaks=8)
barplot(res)
hist(res)
hist(rbinom(observations, kills, chargechance))
hist(dist)
sist
dist
hist(dister)
hist(distr)
hist((distr * 0.15 * maxcharges))
hist((distr * 0.15))
hist((distr * maxcharges))
hist((distr * maxcharges * 2))
hist((distr * maxcharges * 0.5))
hist((distr * maxcharges * 0.15))
hist((distr * maxcharges * 0.15) + distr)
hist(res)
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
hist(roll.charges(10000, 20, 0.15, 0.15, 10))
roll.charges(10000, 20, 0.15, 0.15, 10)
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 0.15, 10))
median(roll.charges(10000, 20, 0, 0.15, 10))
median(roll.charges(10000, 20, 0.15, 1, 10))
median(roll.charges(10000, 20, 0.25, 0.15, 10))
hist(roll.charges(10000, 20, 0.25, 0.15, 10))
hist(roll.charges(10000, 10, 0.25, 0.15, 10))
hist(roll.charges(10000, 40, 0.25, 0.15, 10))
hist(roll.charges(10000, 10, 0.25, 0.15, 10))
hist(roll.charges(10000, 20, 0.25, 0.15, 10))
hist(roll.charges(10000, 20, 0.25, 0, 10))
hist(roll.charges(10000, 20, 0.25, 0.10, 10))
hist(roll.charges(10000, 20, 0.25, 0.3, 10))
hist(roll.charges(10000, 20, 0.25, 0.15, 10))
hist(roll.charges(10000, 20, 0.25, 0.15, 7))
hist(roll.charges(10000, 20, 0.12, 0.15, 8))
hist(roll.charges(10000, 20, 0.4, 0.15, 8))
hist(roll.charges(10000, 20, 0.04, 0.15, 8))
hist(roll.charges(10000, 20, 0.37/3, 0.15, 8))
hist(roll.charges(10000, 20, 0.37/3, 0.15, 7))
hist(roll.charges(10000, 40, 0.37/3, 0.15, 7))
hist(roll.charges(10000, 20, 0.37/3, 0.15, 7))
library(DAAG)
install.packages(DAAG)
install.packages("DAAG")
library(DAAG)
roller
lm(depression ~ weight, data = roller)
rollm = lm(depression ~ weight, data = roller)
plot(rollm)
plot(rollm)
plot(depression ~ weight, data = roller)
plot(depression ~ weight, data = roller, xlim=c(0,1.04*max(weight)))
plot(depression ~ weight, data = roller, pch = 16)
abline(rollm, col="red", lwd=2)
points(roller$weight, fitted.values(rollm), pch = 16, col = "red", lwd=2)
fitted.values(rollm)
data <- rnorm(100)
sorted_data <- sort(data)
n <- length(sorted_data)
theoretical_quantiles <- qnorm(ppoints(n))
help("ppoints")
plot(theoretical_quantiles, sorted_data)
help(qnorm)
ppoints(10)
ppoints(2)
ppoints(3)
ppoints(10)
plot(ppoints(10))
plot(ppoints(100))
qnorm(ppoints(10))
plot(qnorm(ppoints(10)))
library(DAAG)
roller
lmodel <- lm(depression ~ weight, data = roller)
plot(lmodel)
plot(roller)
abline(lmodel)
plot(lmodel)
lmodel
install.packages("apcluster")
library(apcluster)
install.packages("apcluster")
install.packages("apcluster")
install.packages("apcluster")
install.packages("apcluster")
install.packages("apcluster")
library(apcluster)
rnorm()
rnorm(100)
plot(rnorm(100))
data <- rnorm(100, mean = -2)
data <- c(data, rnorm(100, mean = 2))
plot(data)
plot(apcluster(data), data)
plot(apcluster(negDistMat(data, r = 2), data), data)
plot(s = apcluster(negDistMat(data, r = 2), x = data), x = data)
plot(apcluster(s = negDistMat(data, r = 2), x = data), x = data)
apcluster(s = negDistMat(data, r = 2), x = data)
help(apcluster)
apcluster(s = negDistMat(r = 2), x = data)
clust <- apcluster(s = negDistMat(r = 2), x = data)
plot(clust, data)
plot(clust)
heatmap(clust)
plot(clust, data
)
plot(clust, x =data)
apcluster::plot(clust, data)
apcluster::plot(clus)
apcluster::plot(clust)
apcluster::plot(apcluster(negDistMat(r=2), data), data)
dsim <- negDistMat(x2, r=2)
cl3 <- cbind(rnorm(20, 0.50, 0.03), rnorm(20, 0.72, 0.03))
cl4 <- cbind(rnorm(25, 0.50, 0.03), rnorm(25, 0.42, 0.04))
x2 <- rbind(x1, cl3, cl4)
cl1 <- cbind(rnorm(30, 0.3, 0.05), rnorm(30, 0.7, 0.04))
cl2 <- cbind(rnorm(30, 0.7, 0.04), rnorm(30, 0.4, .05))
x1 <- rbind(cl1, cl2)
cl3 <- cbind(rnorm(20, 0.50, 0.03), rnorm(20, 0.72, 0.03))
cl4 <- cbind(rnorm(25, 0.50, 0.03), rnorm(25, 0.42, 0.04))
x2 <- rbind(x1, cl3, cl4)
dsim <- negDistMat(x2, r=2)
ssim <- as.SparseSimilarityMatrix(dsim, lower=-0.2)
sapres <- apcluster(ssim, q=0)
plot(sapres, x2)
clear()
clear
data <- c(rnorm(100, mean = -2), cnorm(78, mean = 2))
data <- c(rnorm(100, mean = -2), rnorm(78, mean = 2))
plot(data)
clust <- apclusterK(negDistMat(r=2), data, K=2)
clust$p
clust@p
plot(clust)
plot(clust, data)
cbind(rnorm(100, 2), rnorm(100, 2))
data2 <- cbind(rnorm(100, 2), rnorm(100, 2))
plot(data2)
data2 <- cbind(rnorm(100, 2), rnorm(100, -2))
plot(data2)
data3 <- cbind(rnorm(100, -2), rnorm(100, 2))
plot(c(data2, data3))
cbind(data2, data3)
plot(cbind(data2, data3))
data23 <- c(data2, data3)
apclusterK(negDistMat(r=2), data23, K=2)
clust <- apclusterK(negDistMat(r=2), data23, K=2)
plot(clust, data23)
plot(clust, negDistMat(data23, r=2))
heatmap(clust)
cbind(rep("10", 100), rep("yo", 100))
rbind(rep("10", 100), rep("yo", 100))
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218,327,106,67), nrow=3,byrow=T) colnames(caff.marital) <- c("0","1-150","151-300",">300") rownames(caff.marital) <- c("Married","Prev.married","Single") names(dimnames(caff.marital)) <- c("Marital status","Caffeine consumption in mg/day")
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218,327,106,67), nrow=3,byrow=T)
colnames(caff.marital) <- c("0","1-150","151-300",">300")
rownames(caff.marital) <- c("Married","Prev.married","Single")
names(dimnames(caff.marital)) <- c("Marital status","Caffeine consumption in mg/day")
margin.table(caff.marital)
caff.marital
margin.table(caff.marital, 2)
help("margin.table")
margin.table(caff.marital, 1)
barplot(margin.table(caff.marital, 2))
barplot(margin.table(caff.marital, 2), beside=T)
barplot(margin.table(caff.marital, 2), beside=F)
barplot(margin.table(caff.marital, 2), beside=T)
barplot(margin.table(caff.marital, 2), beside=T)
help(barplot)
barplot(margin.table(caff.marital, 2), beside = TRUE)
barplot(margin.table(caff.marital, 2), beside = FALSE)
barplot(margin.table(caff.marital, 2), beside = booga)
barplot(margin.table(caff.marital, 2), beside = booga mammella)
barplot(margin.table(caff.marital, 2), beside = booga)
help(par)
opar <- par(mfrow=c(1,3), mex=0.8, mar=c(1,1,2,1))
slices <- c("purple", "red", "green", "blue")
pie(caff.marital["Married",], main="Married",c=slices)
pie(caff.marital["Married",], main="Married",col = =slices)
pie(caff.marital["Married",], main="Married",col =slices)
pie(caff.marital["Prev.married",], main="Previously married", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
par(mfrow=1)
par(mfrow=c(1))
par(mfrow=c(1,1))
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,1))
opar <- par(mfrow=c(1,1), mex=0.8)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,1), mex=5)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,1), mex=1)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,2), mex=1)
pie(caff.marital["Single",], main="Single", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,2), mex=1, mar=c(1,1,10,1))
pie(caff.marital["Single",], main="Single", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,2), mex=1, mar=c(1,1,1,1))
pie(caff.marital["Single",], main="Single", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(2,1), mex=1, mar=c(1,1,1,1))
pie(caff.marital["Single",], main="Single", col=slices)
pie(caff.marital["Single",], main="Single", col=slices)
opar <- par(mfrow=c(1,1), mex=1, mar=c(1,1,1,1))
opar <- par(mfrow=c(1,1), mex=1, mar=c(1,1,1,1))
pie(caff.marital["Single",], main="Single", col=slices)
help(density)
help(with)
help(with)
library(apcluster)
c(rnorm(100, mean=-1), rnorm(120, mean=1))
data <- c(rnorm(100, mean=-1), rnorm(120, mean=1))
plot(apcluster(negDistMat(r=2), data), data)
plot(apcluster(negDistMat(r=2), data=data), data)
plot(apcluster(negDistMat(r=2), x=data), data)
plot(apcluster(negDistMat(r=2), x=data), x=data)
plot(apcluster(negDistMat(r=2), x=data))
plot(apcluster(negDistMat(r=2), x=data, details=TRUE))
setwd(E:\Coding\Università\Progetto parallele\Progetto_Parallele);
setwd("E:\Coding\Università\Progetto parallele\Progetto_Parallele")
setwd("E:/Coding/Università/Progetto parallele/Progetto_Parallele")
ls
ls()
cd()
read.csv("E:/Coding/Università/Progetto parallele/Progetto_Parallele/Outputs/Benchmarks/chess_v1.txt")
benchmark <- read.csv("E:/Coding/Università/Progetto parallele/Progetto_Parallele/Outputs/Benchmarks/chess_v1.txt")
View(benchmark)
library(dplyr)
summary <- benchmark %>%
group_by(test_name) %>%
summarise(
mean_serial = mean(serial_time),
sd_serial = sd(serial_time),
mean_cuda = mean(cuda_time),
sd_cuda =sd(cuda_time)
)
print(summary)
View(summary)
library(knitr)
install.packages("knitr")
library(knitr)
kable(summary, format = "markdown")
help("kable")
kable(summary, format = "markdown", digits = 1)
save.image("E:/Coding/Università/Progetto parallele/Progetto_Parallele/Workspace.RData")
